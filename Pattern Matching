#Finds positions where pattern is found in text with at most d mismatches
def ApproximatePatternMatching(Text, Pattern, d):
    positions = [] # initializing list of positions
    # your code here
    n = len(Text)
    k = len(Pattern)
    for i in range(n-k+1):
        if HammingDistance(Pattern, Text[i:i+k]) <= d:
            positions.append(i)
    return positions

def HammingDistance(p, q):
    count = 0
    n = len(p)
    for i in range(n):
        if p[i] != q[i]:
            count += 1
    return count
